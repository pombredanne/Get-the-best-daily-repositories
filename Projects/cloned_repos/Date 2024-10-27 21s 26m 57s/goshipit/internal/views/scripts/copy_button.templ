package scripts

templ CodeCopyButtonScript() {
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			let blocks = document.querySelectorAll("pre.chroma");
			blocks.forEach((block) => {
				let btn = block.querySelector("button[name=copy-btn]");
				if (btn === null && navigator.clipboard) {
					let button = document.createElement("button");

					let svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
					let path = document.createElementNS("http://www.w3.org/2000/svg", 'path');
					svg.setAttribute("class", "w-8 h-8")
					svg.setAttribute("viewBox", "0 0 24 24")
					svg.setAttribute("fill", "none")
					svg.setAttribute("xmlns", "http://www.w3.org/2000/svg")
					path.setAttribute("class", "fill-slate-100")
					path.setAttribute("fill-rule", "evenodd")
					path.setAttribute("clip-rule", "evenodd")
					path.setAttribute("d", "M19.5 16.5L19.5 4.5L18.75 3.75H9L8.25 4.5L8.25 7.5L5.25 7.5L4.5 8.25V20.25L5.25 21H15L15.75 20.25V17.25H18.75L19.5 16.5ZM15.75 15.75L15.75 8.25L15 7.5L9.75 7.5V5.25L18 5.25V15.75H15.75ZM6 9L14.25 9L14.25 19.5L6 19.5L6 9Z")
					svg.appendChild(path)
					button.appendChild(svg)
					button.setAttribute("name", "copy-btn")
					block.appendChild(button);

					button.addEventListener("click", async () => {
						await copyCode(block, button);
					});
				}
			});

			async function copyCode(block, button) {
				let code = block.querySelector("code");
				let text = code.innerText.split("\n\n").join("\n");

				await navigator.clipboard.writeText(text);
				// visual feedback that task is completed
				button.querySelector("path").classList.remove("fill-slate-100")
				button.querySelector("path").classList.add("fill-emerald-300")

				setTimeout(() => {
					button.querySelector("path").classList.remove("fill-slate-300")
					button.querySelector("path").classList.add("fill-slate-100")
				}, 500);
			}
		})
	</script>
}

templ HXCodeCopyButtonScript() {
	<script>
		document.addEventListener("htmx:afterSettle", function() {
			let blocks = document.querySelectorAll("pre.chroma");
			blocks.forEach((block) => {
				let btn = block.querySelector("button[name=copy-btn]");
				if (btn === null && navigator.clipboard) {
					let button = document.createElement("button");

					let svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
					let path = document.createElementNS("http://www.w3.org/2000/svg", 'path');
					svg.setAttribute("class", "w-8 h-8")
					svg.setAttribute("viewBox", "0 0 24 24")
					svg.setAttribute("fill", "none")
					svg.setAttribute("xmlns", "http://www.w3.org/2000/svg")
					path.setAttribute("class", "fill-slate-100")
					path.setAttribute("fill-rule", "evenodd")
					path.setAttribute("clip-rule", "evenodd")
					path.setAttribute("d", "M19.5 16.5L19.5 4.5L18.75 3.75H9L8.25 4.5L8.25 7.5L5.25 7.5L4.5 8.25V20.25L5.25 21H15L15.75 20.25V17.25H18.75L19.5 16.5ZM15.75 15.75L15.75 8.25L15 7.5L9.75 7.5V5.25L18 5.25V15.75H15.75ZM6 9L14.25 9L14.25 19.5L6 19.5L6 9Z")
					svg.appendChild(path)
					button.appendChild(svg)
					button.setAttribute("name", "copy-btn")
					block.appendChild(button);

					button.addEventListener("click", async () => {
						await copyCode(block, button);
					});
				}
			});

			async function copyCode(block, button) {
				let code = block.querySelector("code");
				let text = code.innerText.split("\n\n").join("\n");

				await navigator.clipboard.writeText(text);
				// visual feedback that task is completed
				button.querySelector("path").classList.toggle("fill-emerald-300")

				setTimeout(() => {
					button.querySelector("path").classList.toggle("fill-emerald-300")
				}, 700);
			}
		})
	</script>
}
