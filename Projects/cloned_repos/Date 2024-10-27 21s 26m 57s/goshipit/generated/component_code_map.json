{
  "actions": [
    {
      "name": "dropdown",
      "code": [
        "templ Dropdown(label string, dropdownItems []model.DropdownItem) {",
        "\t\u003cdetails class=\"dropdown\"\u003e",
        "\t\t\u003csummary class=\"btn m-1\"\u003e{ label }\u003c/summary\u003e",
        "\t\t\u003cul class=\"menu dropdown-content bg-base-200 rounded-box z-50 w-52 p-2 shadow\"\u003e",
        "\t\t\tfor _, di := range dropdownItems {",
        "\t\t\t\t\u003cli\u003e\u003ca { di.Attrs... }\u003e{ di.Label }\u003c/a\u003e\u003c/li\u003e",
        "\t\t\t}",
        "\t\t\u003c/ul\u003e",
        "\t\u003c/details\u003e",
        "}"
      ]
    },
    {
      "name": "modal",
      "code": [
        "templ Modal(id, label string) {",
        "\t@modalWrapper(",
        "\t\tid,",
        "\t\tlabel,",
        "\t\ttempl.Attributes{\"onclick\": fmt.Sprintf(\"%s.showModal()\", id)},",
        "\t) {",
        "\t\t{ children... }",
        "\t}",
        "}",
        "",
        "templ modalWrapper(id string, label any, attrs templ.Attributes) {",
        "\t// you can use a string or a templ.Component as the 'label'",
        "\t// of the modal button",
        "\tif s, ok := label.(string); ok {",
        "\t\t\u003cdiv class=\"btn\" { attrs... }\u003e",
        "\t\t\t{ s }",
        "\t\t\u003c/div\u003e",
        "\t} else if c, ok := label.(templ.Component); ok {",
        "\t\t@c",
        "\t}",
        "\t\u003cdialog id={ id } class=\"modal\"\u003e",
        "\t\t\u003cdiv class=\"modal-box\"\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cform method=\"dialog\" class=\"modal-backdrop\"\u003e",
        "\t\t\t\u003cbutton\u003eclose\u003c/button\u003e",
        "\t\t\u003c/form\u003e",
        "\t\u003c/dialog\u003e",
        "}"
      ]
    },
    {
      "name": "swap",
      "code": [
        "templ Swap(on templ.Component, off templ.Component) {",
        "\t\u003clabel class=\"swap\"\u003e",
        "\t\t\u003cinput type=\"checkbox\"/\u003e",
        "\t\t\u003cdiv class=\"swap-on\"\u003e",
        "\t\t\t@on",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cdiv class=\"swap-off\"\u003e",
        "\t\t\t@off",
        "\t\t\u003c/div\u003e",
        "\t\u003c/label\u003e",
        "}"
      ]
    }
  ],
  "data_display": [
    {
      "name": "accordion",
      "code": [
        "templ AccordionRow(label string) {",
        "\t\u003cdiv class=\"collapse collapse-arrow bg-base-200 join-item\"\u003e",
        "\t\t\u003cinput type=\"checkbox\" name=\"templ-accordion\"/\u003e",
        "\t\t\u003cdiv class=\"collapse-title text-xl font-medium\"\u003e{ label }\u003c/div\u003e",
        "\t\t\u003cdiv class=\"collapse-content bg-base-300\"\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "active_search",
      "code": [
        "templ ActiveSearchInput(id, url, targetSelector string) {",
        "\t\u003cdiv class=\"w-full flex space-x-2 items-center\"\u003e",
        "\t\t\u003cdiv class=\"w-full max-w-xs\"\u003e",
        "\t\t\t@Form(",
        "\t\t\t\ttempl.Attributes{",
        "\t\t\t\t\t\"id\":           id,",
        "\t\t\t\t\t\"hx-get\":       url,",
        "\t\t\t\t\t\"hx-target\":    targetSelector,",
        "\t\t\t\t\t\"hx-swap\":      \"innerHTML\",",
        "\t\t\t\t\t\"hx-trigger\":   \"keyup from:input[name=search] delay:500ms, search\",",
        "\t\t\t\t\t\"hx-indicator\": fmt.Sprintf(\"#%s\", id),",
        "\t\t\t\t},",
        "\t\t\t) {",
        "\t\t\t\t@Input(",
        "\t\t\t\t\tmodel.Input{",
        "\t\t\t\t\t\tIcon: searchIcon(),",
        "\t\t\t\t\t\tName: \"search\",",
        "\t\t\t\t\t\tAttrs: templ.Attributes{",
        "\t\t\t\t\t\t\t\"type\":        \"search\",",
        "\t\t\t\t\t\t\t\"placeholder\": \"Search components...\",",
        "\t\t\t\t\t\t},",
        "\t\t\t\t\t\tClasses: \"input-sm !border-0 !outline-base-content/10 !placeholder-base-content/50 !bg-transparent\",",
        "\t\t\t\t\t},",
        "\t\t\t\t)",
        "\t\t\t}",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cdiv class=\"flex justify-center items-center\"\u003e",
        "\t\t\t\u003cspan id={ id } class=\"htmx-indicator loading loading-spinner\"\u003e\u003c/span\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ searchIcon() {",
        "\t\u003csvg",
        "\t\tclass=\"w-5 h-5\"",
        "\t\tviewBox=\"0 0 32 32\"",
        "\t\tversion=\"1.1\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"",
        "\t\txmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"",
        "\t\u003e",
        "\t\t\u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"\u003e",
        "\t\t\t\u003cg class=\"fill-base-content/60\" id=\"Icon-Set\" sketch:type=\"MSLayerGroup\" transform=\"translate(-256.000000, -1139.000000)\"\u003e",
        "\t\t\t\t\u003cpath d=\"M269.46,1163.45 C263.17,1163.45 258.071,1158.44 258.071,1152.25 C258.071,1146.06 263.17,1141.04 269.46,1141.04 C275.75,1141.04 280.85,1146.06 280.85,1152.25 C280.85,1158.44 275.75,1163.45 269.46,1163.45 L269.46,1163.45 Z M287.688,1169.25 L279.429,1161.12 C281.591,1158.77 282.92,1155.67 282.92,1152.25 C282.92,1144.93 276.894,1139 269.46,1139 C262.026,1139 256,1144.93 256,1152.25 C256,1159.56 262.026,1165.49 269.46,1165.49 C272.672,1165.49 275.618,1164.38 277.932,1162.53 L286.224,1170.69 C286.629,1171.09 287.284,1171.09 287.688,1170.69 C288.093,1170.3 288.093,1169.65 287.688,1169.25 L287.688,1169.25 Z\" id=\"search\" sketch:type=\"MSShapeGroup\"\u003e\u003c/path\u003e",
        "\t\t\t\u003c/g\u003e",
        "\t\t\u003c/g\u003e",
        "\t\u003c/svg\u003e",
        "}"
      ]
    },
    {
      "name": "avatar",
      "code": [
        "templ Avatar(src, classes string) {",
        "\t\u003cdiv class={ \"avatar\", classes }\u003e",
        "\t\t\u003cdiv class={ \"rounded\", classes }\u003e",
        "\t\t\t\u003cimg class=\"block\" src={ src }/\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ AvatarXS(src string) {",
        "\t@Avatar(src, \"w-8\")",
        "}",
        "",
        "templ AvatarSM(src string) {",
        "\t@Avatar(src, \"w-12\")",
        "}",
        "",
        "templ AvatarLG(src string) {",
        "\t@Avatar(src, \"w-16\")",
        "}",
        "",
        "templ AvatarXL(src string) {",
        "\t@Avatar(src, \"w-20\")",
        "}",
        "",
        "templ AvatarXXL(src string) {",
        "\t@Avatar(src, \"w-24\")",
        "}",
        "",
        "templ AvatarGroup() {",
        "\t\u003cdiv class=\"avatar-group -space-x-6 rtl:space-x-reverse\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "card",
      "code": [
        "templ Card(card model.Card) {",
        "\t\u003cdiv class=\"card bg-base-100 w-96 shadow-xl\"\u003e",
        "\t\tif card.Source != \"\" {",
        "\t\t\t\u003cfigure\u003e",
        "\t\t\t\t\u003cimg src={ card.Source } alt={ card.Alt }/\u003e",
        "\t\t\t\u003c/figure\u003e",
        "\t\t}",
        "\t\t\u003cdiv class=\"card-body\"\u003e",
        "\t\t\t\u003ch2 class=\"card-title\"\u003e{ card.Title }\u003c/h2\u003e",
        "\t\t\t\u003cp\u003e{ card.Content }\u003c/p\u003e",
        "\t\t\t\u003cdiv class=\"card-actions justify-end\"\u003e",
        "\t\t\t\t{ children... }",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "carousel",
      "code": [
        "templ Carousel(images []model.Image) {",
        "\t\u003cdiv class=\"carousel carousel-center rounded-box\"\u003e",
        "\t\tfor _, img := range images {",
        "\t\t\t\u003cdiv class=\"carousel-item [\u0026:not(:last-child)]:border-r border-r-base-300\"\u003e",
        "\t\t\t\t\u003cimg class=\"max-w-xs\" src={ img.Source } alt={ img.Alt }/\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "collapse",
      "code": [
        "templ Collapse(title string) {",
        "\t\u003cdiv tabindex=\"0\" class=\"collapse bg-base-200\"\u003e",
        "\t\t\u003cinput type=\"checkbox\"/\u003e",
        "\t\t\u003cdiv class=\"collapse-title text-xl font-medium\"\u003e{ title }\u003c/div\u003e",
        "\t\t\u003cdiv class=\"collapse-content\"\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "countdown",
      "code": [
        "templ Countdown(expires time.Time) {",
        "\t\u003cdiv",
        "\t\tclass=\"flex items-center space-x-1\"",
        "\t\tx-cloak",
        "\t\tx-data={ fmt.Sprintf(\"countdownTimer(new Date(\\\"%s\\\"))\", expires.Format(\"2006-01-02T15:04:05Z\")) }",
        "\t\tx-init=\"initCountdownTimer();\"",
        "\t\thx-get=\"/\"",
        "\t\thx-trigger=\"countdownExpired from:body\"",
        "\t\u003e",
        "\t\t@countDownItem(\"time().days\", \"days\")",
        "\t\t@countDownItem(\"time().hours\", \"hours\")",
        "\t\t@countDownItem(\"time().minutes\", \"min\")",
        "\t\t@countDownItem(\"time().seconds\", \"sec\")",
        "\t\u003c/div\u003e",
        "\t\u003cscript\u003e",
        "\t\tfunction countdownTimer(expiry) {",
        "\t\t\treturn {",
        "\t\t\t\texpiry: expiry,",
        "\t\t\t\tremaining:null,",
        "\t\t\t\tinitCountdownTimer() {",
        "\t\t\t\t\tthis.setCountdownTimerRemaining()",
        "\t\t\t\t\tthis.intervalId = setInterval(() =\u003e {",
        "\t\t\t\t\t\tthis.setCountdownTimerRemaining();",
        "\t\t\t\t\t}, 1000);",
        "\t\t\t\t},",
        "\t\t\t\tsetCountdownTimerRemaining() {",
        "\t\t\t\t\tconst diff = this.expiry - new Date().getTime();",
        "\t\t\t\t\tthis.remaining =  parseInt(diff / 1000);",
        "\t\t\t\t\tlet now = this.time()",
        "\t\t\t\t\tif (now.days === \"00\" \u0026\u0026 now.hours === \"00\" \u0026\u0026 now.minutes === \"00\" \u0026\u0026 now.seconds === \"00\") {",
        "\t\t\t\t\t\tclearInterval(this.intervalId)",
        "\t\t\t\t\t\tlet body = document.querySelector(\"body\")",
        "\t\t\t\t\t\tbody.dispatchEvent(new Event(\"countdownExpired\"))",
        "\t\t\t\t\t}",
        "\t\t\t\t},",
        "\t\t\t\tcountdownTimerDays() {",
        "\t\t\t\t\treturn {",
        "\t\t\t\t\t\tvalue:this.remaining / 86400,",
        "\t\t\t\t\t\tremaining:this.remaining % 86400",
        "\t\t\t\t\t};",
        "\t\t\t\t},",
        "\t\t\t\tcountdownTimerHours() {",
        "\t\t\t\t\treturn {",
        "\t\t\t\t\t\tvalue:this.countdownTimerDays().remaining / 3600,",
        "\t\t\t\t\t\tremaining:this.countdownTimerDays().remaining % 3600",
        "\t\t\t\t\t};",
        "\t\t\t\t},",
        "\t\t\t\tcountdownTimerMinutes() {",
        "\t\t\t\t\treturn {",
        "\t\t\t\t\tvalue:this.countdownTimerHours().remaining / 60,",
        "\t\t\t\t\tremaining:this.countdownTimerHours().remaining % 60",
        "\t\t\t\t};",
        "\t\t\t\t},",
        "\t\t\t\tcountdownTimerSeconds() {",
        "\t\t\t\t\treturn {",
        "\t\t\t\t\tvalue:this.countdownTimerMinutes().remaining,",
        "\t\t\t\t};",
        "\t\t\t\t},",
        "\t\t\t\tformat(value) {",
        "\t\t\t\t\treturn (\"0\" + parseInt(value)).slice(-2)",
        "\t\t\t\t},",
        "\t\t\t\ttime() {",
        "\t\t\t\t\treturn {",
        "\t\t\t\t\t\tdays:this.format(this.countdownTimerDays().value),",
        "\t\t\t\t\t\thours:this.format(this.countdownTimerHours().value),",
        "\t\t\t\t\t\tminutes:this.format(this.countdownTimerMinutes().value),",
        "\t\t\t\t\t\tseconds:this.format(this.countdownTimerSeconds().value),",
        "\t\t\t\t\t}",
        "\t\t\t\t},",
        "\t\t\t}",
        "\t\t}",
        "\t\u003c/script\u003e",
        "\t\u003cscript src=\"/js/alpine.js\" defer\u003e\u003c/script\u003e",
        "}",
        "",
        "templ countDownItem(xText, label string) {",
        "\t\u003cdiv",
        "\t\tclass={",
        "\t\t\t\"flex flex-col justify-center items-center\",",
        "\t\t\t\"w-16 h-20 rounded-box bg-base-content text-base-300\",",
        "\t\t}",
        "\t\u003e",
        "\t\t\u003cp class=\"text-5xl font-mono\" x-text={ xText }\u003e\u003c/p\u003e",
        "\t\t\u003cp\u003e{ label }\u003c/p\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "diff",
      "code": [
        "templ Diff(w, h int, image1, image2 model.Image) {",
        "\t\u003cdiv class={ \"diff\", fmt.Sprintf(\"aspect-[%d/%d]\", w, h) }\u003e",
        "\t\t\u003cdiv class=\"diff-item-1\"\u003e",
        "\t\t\t\u003cimg alt={ image1.Alt } src={ image1.Source }/\u003e",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cdiv class=\"diff-item-2\"\u003e",
        "\t\t\t\u003cimg alt={ image2.Alt } src={ image2.Source }/\u003e",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cdiv class=\"diff-resizer\"\u003e\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "features",
      "code": [
        "templ Features(title string, features []model.Feature) {",
        "\t\u003cdiv class=\"py-12 px-4\"\u003e",
        "\t\t\u003cdiv class=\"max-w-screen-xl mx-auto text-base-content/80\"\u003e",
        "\t\t\tif title != \"\" {",
        "\t\t\t\t\u003ch2 class=\"sm:text-4xl text-2xl font-bold text-center mb-16\"\u003e{ title }\u003c/h2\u003e",
        "\t\t\t}",
        "\t\t\t\u003cdiv class=\"grid lg:grid-cols-3 md:grid-cols-2 gap-12 max-md:max-w-lg mx-auto\"\u003e",
        "\t\t\t\tfor i := range features {",
        "\t\t\t\t\t@Feature(features[i])",
        "\t\t\t\t}",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ Feature(feature model.Feature) {",
        "\t\u003cdiv class=\"flex flex-col justify-between items-center rounded-box group p-8 text-center hover:bg-base-300 hover:text-base-content hover:shadow-xl transition-all duration-300\"\u003e",
        "\t\t@feature.Icon",
        "\t\tif feature.Title != \"\" {",
        "\t\t\t\u003ch3 class=\"text-xl font-semibold mb-3\"\u003e{ feature.Title }\u003c/h3\u003e",
        "\t\t}",
        "\t\t\u003cp class=\"text-neutral group-hover:text-base-content text-sm\"\u003e{ feature.Description }\u003c/p\u003e",
        "\t\tif feature.URL != \"\" {",
        "\t\t\t\u003ca href={ templ.SafeURL(feature.URL) } class=\"mt-2 link link-primary\"\u003eLearn more\u003c/a\u003e",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "infinite_scroll",
      "code": [
        "templ InfiniteScrollTable(rows []templ.Component) {",
        "\t@Table(",
        "\t\t[]templ.Component{PlainText(\"Name\"), PlainText(\"Email\")},",
        "\t\trows,",
        "\t\tnil,",
        "\t)",
        "\t\u003cdiv class=\"flex justify-center\"\u003e\u003cspan id=\"spinner\" class=\"htmx-indicator loading loading-spinner\"\u003e\u003c/span\u003e\u003c/div\u003e",
        "}",
        "",
        "templ InfiniteScrollRows(rows []templ.Component) {",
        "\tfor _, r := range rows {",
        "\t\t@r",
        "\t}",
        "}",
        "",
        "templ InfiniteScrollRow(name, email string, page int, hasMore bool) {",
        "\t\u003ctr",
        "\t\tif hasMore {",
        "\t\t\thx-get={ fmt.Sprintf(\"/infinite-scroll-rows?page=%d\", page+1) }",
        "\t\t\thx-target=\"this\"",
        "\t\t\thx-trigger=\"intersect once\"",
        "\t\t\thx-swap=\"afterend\"",
        "\t\t\thx-indicator=\"#spinner\"",
        "\t\t}",
        "\t\u003e",
        "\t\t\u003ctd\u003e{ name }\u003c/td\u003e",
        "\t\t\u003ctd\u003e{ email }\u003c/td\u003e",
        "\t\u003c/tr\u003e",
        "}"
      ]
    },
    {
      "name": "join",
      "code": [
        "templ Join(components []templ.Component) {",
        "\t\u003cdiv class=\"join\"\u003e",
        "\t\tfor _, c := range components {",
        "\t\t\t\u003cdiv class=\"join-item\"\u003e",
        "\t\t\t\t@c",
        "\t\t\t\u003c/div\u003e",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "lazy_load",
      "code": [
        "templ LazyLoad(url string) {",
        "\t\u003cdiv",
        "\t\thx-get={ url }",
        "\t\thx-trigger=\"load\"",
        "\t\thx-target=\"this\"",
        "\t\tclass=\"flex justify-center items-center py-8\"",
        "\t\u003e",
        "\t\t\u003cspan class=\"loading loading-spinner\"\u003e\u003c/span\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "pricing",
      "code": [
        "templ Pricing(checked bool, prices []model.Price) {",
        "\t\u003cdiv class=\"w-full mx-auto py-8 max-w-screen-md\"\u003e",
        "\t\t\u003cdiv class=\"max-w-xs mx-auto\"\u003e",
        "\t\t\t@Toggle(model.Toggle{",
        "\t\t\t\tBefore:    \"Paid monthly\",",
        "\t\t\t\tAfter:     \"Paid annually\",",
        "\t\t\t\tName:      \"period\",",
        "\t\t\t\tChecked:   checked,",
        "\t\t\t\tHighlight: true,",
        "\t\t\t\tAttrs: templ.Attributes{",
        "\t\t\t\t\t\"hx-get\":    \"/pricing\",",
        "\t\t\t\t\t\"hx-target\": \"#price-grid\",",
        "\t\t\t\t\t\"hx-swap\":   \"outerHTML\",",
        "\t\t\t\t},",
        "\t\t\t})",
        "\t\t\u003c/div\u003e",
        "\t\t@PriceGrid(prices)",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ PriceGrid(prices []model.Price) {",
        "\t\u003cdiv id=\"price-grid\" class=\"grid grid-cols-1 md:grid-cols-3 px-4 pt-4 gap-4 w-full mx-auto\"\u003e",
        "\t\tfor i := range prices {",
        "\t\t\t@Price(prices[i], nil)",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ Price(price model.Price, footer templ.Component) {",
        "\t\u003cdiv class=\"card ring-1 ring-base-content/60 rounded-box w-full max-w-xs p-6 space-y-8 mx-auto\"\u003e",
        "\t\t\u003cdiv class=\"card-title text-3xl\"\u003e\u003ch2 class=\"mx-auto\"\u003e{ price.Title }\u003c/h2\u003e\u003c/div\u003e",
        "\t\t\u003cp class=\"text-center text-3xl font-bold\"\u003e{ price.Price } \u003cspan class=\"text-xs font-normal\"\u003e{ price.Per }\u003c/span\u003e\u003c/p\u003e",
        "\t\t\u003cbutton { price.CallToAction.Attrs... }\u003e",
        "\t\t\t{ price.CallToAction.Label }",
        "\t\t\u003c/button\u003e",
        "\t\t\u003cdiv class=\"text-sm\"\u003e",
        "\t\t\t\u003cul class=\"space-y-4\"\u003e",
        "\t\t\t\tfor i := range price.IncludedFeatures {",
        "\t\t\t\t\t\u003cli class=\"flex items-center space-x-2\"\u003e",
        "\t\t\t\t\t\t\u003csvg class=\"w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\"\u003e",
        "\t\t\t\t\t\t\t\u003cpath class=\"fill-base-content\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.5821 5.54289C21.9726 5.93342 21.9726 6.56658 21.5821 6.95711L10.2526 18.2867C9.86452 18.6747 9.23627 18.6775 8.84475 18.293L2.29929 11.8644C1.90527 11.4774 1.89956 10.8443 2.28655 10.4503C2.67354 10.0562 3.30668 10.0505 3.70071 10.4375L9.53911 16.1717L20.1679 5.54289C20.5584 5.15237 21.1916 5.15237 21.5821 5.54289Z\"\u003e\u003c/path\u003e",
        "\t\t\t\t\t\t\u003c/svg\u003e",
        "\t\t\t\t\t\t\u003cspan\u003e{ price.IncludedFeatures[i] }\u003c/span\u003e",
        "\t\t\t\t\t\u003c/li\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/ul\u003e",
        "\t\t\tif len(price.ExcludedFeatures) \u003e 0 {",
        "\t\t\t\t\u003cdiv class=\"divider !my-2\"\u003e\u003c/div\u003e",
        "\t\t\t}",
        "\t\t\t\u003cul class=\"space-y-4\"\u003e",
        "\t\t\t\tfor i := range price.ExcludedFeatures {",
        "\t\t\t\t\t\u003cli class=\"flex items-center space-x-2 pl-6\"\u003e",
        "\t\t\t\t\t\t\u003cspan class=\"text-base-content/50\"\u003e{ price.ExcludedFeatures[i] }\u003c/span\u003e",
        "\t\t\t\t\t\u003c/li\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/ul\u003e",
        "\t\t\u003c/div\u003e",
        "\t\tif footer != nil {",
        "\t\t\t@footer",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "stack",
      "code": [
        "templ Stack() {",
        "\t\u003cdiv class=\"stack\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "stats",
      "code": [
        "templ Stats() {",
        "\t\u003cdiv class=\"stats stats-horizontal shadow\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ Stat(stat model.Stat) {",
        "\t\u003cdiv class=\"stat\"\u003e",
        "\t\t\u003cdiv class=\"stat-title\"\u003e{ stat.Title }\u003c/div\u003e",
        "\t\t\u003cdiv class=\"stat-value\"\u003e{ stat.Value }\u003c/div\u003e",
        "\t\tif stat.Description != \"\" {",
        "\t\t\t\u003cdiv class=\"stat-desc\"\u003e{ stat.Description }\u003c/div\u003e",
        "\t\t}",
        "\t\t\u003cdiv class=\"stat-actions\"\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "table",
      "code": [
        "templ Table(headers []templ.Component, rows []templ.Component, attrs templ.Attributes) {",
        "\t\u003cdiv class=\"overflow-x-auto\"\u003e",
        "\t\t\u003ctable { attrs... } class=\"table\"\u003e",
        "\t\t\t\u003cthead\u003e",
        "\t\t\t\t\u003ctr\u003e",
        "\t\t\t\t\tfor _, header := range headers {",
        "\t\t\t\t\t\t\u003cth\u003e",
        "\t\t\t\t\t\t\t@header",
        "\t\t\t\t\t\t\u003c/th\u003e",
        "\t\t\t\t\t}",
        "\t\t\t\t\u003c/tr\u003e",
        "\t\t\t\u003c/thead\u003e",
        "\t\t\t\u003ctbody\u003e",
        "\t\t\t\tfor _, trow := range rows {",
        "\t\t\t\t\t@trow",
        "\t\t\t\t}",
        "\t\t\t\u003c/tbody\u003e",
        "\t\t\u003c/table\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "// Component to use as plain text when",
        "// templ.Component is used as argument",
        "templ PlainText(content string) {",
        "\t{ content }",
        "}"
      ]
    },
    {
      "name": "testimonial",
      "code": [
        "templ TestimonialGrid(title string, testimonials []model.Testimonial) {",
        "\t\u003csection\u003e",
        "\t\t\u003cdiv class=\"mx-auto max-w-screen-xl px-4 py-12 sm:px-6 lg:px-8 lg:py-16\"\u003e",
        "\t\t\t\u003ch2 class=\"text-center text-4xl font-bold tracking-tight sm:text-5xl\"\u003e",
        "\t\t\t\t{ title }",
        "\t\t\t\u003c/h2\u003e",
        "\t\t\t\u003cdiv class=\"mt-8 [column-fill:_balance] sm:columns-2 sm:gap-6 lg:columns-3 lg:gap-8\"\u003e",
        "\t\t\t\tfor i := range testimonials {",
        "\t\t\t\t\t\u003cdiv class=\"mb-8 sm:break-inside-avoid\"\u003e",
        "\t\t\t\t\t\t\u003cblockquote class=\"rounded-lg bg-base-300 p-6 shadow-sm sm:p-8\"\u003e",
        "\t\t\t\t\t\t\t\u003cdiv class=\"flex items-center gap-4\"\u003e",
        "\t\t\t\t\t\t\t\tif testimonials[i].Avatar != nil {",
        "\t\t\t\t\t\t\t\t\t@testimonials[i].Avatar",
        "\t\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t\t\t\u003cdiv\u003e",
        "\t\t\t\t\t\t\t\t\t@RatingDisplay(model.Rating{",
        "\t\t\t\t\t\t\t\t\t\tName:  fmt.Sprintf(\"review-rating-%d\", i),",
        "\t\t\t\t\t\t\t\t\t\tMin:   1,",
        "\t\t\t\t\t\t\t\t\t\tMax:   5,",
        "\t\t\t\t\t\t\t\t\t\tValue: testimonials[i].Rating,",
        "\t\t\t\t\t\t\t\t\t})",
        "\t\t\t\t\t\t\t\t\t\u003cp class=\"mt-0.5 text-lg font-medium\"\u003e{ testimonials[i].Name }\u003c/p\u003e",
        "\t\t\t\t\t\t\t\t\u003c/div\u003e",
        "\t\t\t\t\t\t\t\u003c/div\u003e",
        "\t\t\t\t\t\t\t\u003cp class=\"mt-4\"\u003e",
        "\t\t\t\t\t\t\t\t{ testimonials[i].Content }",
        "\t\t\t\t\t\t\t\u003c/p\u003e",
        "\t\t\t\t\t\t\u003c/blockquote\u003e",
        "\t\t\t\t\t\u003c/div\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/section\u003e",
        "}"
      ]
    },
    {
      "name": "timeline",
      "code": [
        "templ Timeline(items []model.TimelineItem) {",
        "\t\u003cul class=\"timeline\"\u003e",
        "\t\tfor i, item := range items {",
        "\t\t\t\u003cli\u003e",
        "\t\t\t\tif i \u003e 0 {",
        "\t\t\t\t\t\u003chr/\u003e",
        "\t\t\t\t}",
        "\t\t\t\tif item.Start != \"\" {",
        "\t\t\t\t\t\u003cdiv class=\"timeline-start\"\u003e{ item.Start }\u003c/div\u003e",
        "\t\t\t\t}",
        "\t\t\t\tif item.Middle != nil {",
        "\t\t\t\t\t\u003cdiv class=\"timeline-middle\"\u003e",
        "\t\t\t\t\t\t@item.Middle",
        "\t\t\t\t\t\u003c/div\u003e",
        "\t\t\t\t}",
        "\t\t\t\tif item.End != \"\" {",
        "\t\t\t\t\t\u003cdiv class=\"timeline-end\"\u003e{ item.End }\u003c/div\u003e",
        "\t\t\t\t}",
        "\t\t\t\tif i \u003c len(items) - 1 {",
        "\t\t\t\t\t\u003chr/\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/li\u003e",
        "\t\t}",
        "\t\u003c/ul\u003e",
        "}",
        "",
        "templ TimelineCheckbox(checked bool) {",
        "\t\u003csvg",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\tviewBox=\"0 0 20 20\"",
        "\t\tfill=\"currentColor\"",
        "\t\tclass={ \"h-5 w-5\", templ.KV(\"fill-primary\", checked) }",
        "\t\u003e",
        "\t\t\u003cpath",
        "\t\t\tfill-rule=\"evenodd\"",
        "\t\t\td=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"",
        "\t\t\tclip-rule=\"evenodd\"",
        "\t\t\u003e\u003c/path\u003e",
        "\t\u003c/svg\u003e",
        "}"
      ]
    }
  ],
  "data_input": [
    {
      "name": "checkbox",
      "code": [
        "templ Checkbox(checkbox model.Checkbox) {",
        "\t\u003clabel class=\"label cursor-pointer space-x-2\"\u003e",
        "\t\t\u003cspan class=\"label-text\"\u003e",
        "\t\t\t{ checkbox.Label }",
        "\t\t\u003c/span\u003e",
        "\t\t\u003cinput",
        "\t\t\t{ checkbox.Attrs... }",
        "\t\t\ttype=\"checkbox\"",
        "\t\t\tname={ checkbox.Name }",
        "\t\t\tif checkbox.Checked {",
        "\t\t\t\tchecked=\"checked\"",
        "\t\t\t}",
        "\t\t\tclass={ \"checkbox\", checkbox.Class }",
        "\t\t/\u003e",
        "\t\u003c/label\u003e",
        "}"
      ]
    },
    {
      "name": "combobox",
      "code": [
        "templ Combobox(cb model.Combobox) {",
        "\t\u003cdetails class=\"dropdown w-full max-w-md min-h-8\"\u003e",
        "\t\t\u003csummary class=\"cursor-pointer flex space-x-2 w-full rounded-box border border-base-content py-1 px-2\"\u003e",
        "\t\t\t\u003cspan class=\"text-sm text-nowrap\"\u003e{ cb.Label }\u003c/span\u003e",
        "\t\t\t\u003cdiv class=\"w-full flex items-center space-x-1\"\u003e",
        "\t\t\t\t\u003cdiv id={ fmt.Sprintf(\"%s_selections\", cb.Name) } class=\"w-full grid-flow-col-dense\"\u003e",
        "\t\t\t\t\tfor _, s := range cb.Selected {",
        "\t\t\t\t\t\t@ComboBadge(cb.Name, s)",
        "\t\t\t\t\t}",
        "\t\t\t\t\u003c/div\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/summary\u003e",
        "\t\t\u003cul class=\"menu dropdown-content bg-base-200 rounded-box z-50 p-2 shadow\"\u003e",
        "\t\t\tfor _, opt := range cb.Options {",
        "\t\t\t\t\u003cli\u003e",
        "\t\t\t\t\t\u003clabel class=\"label cursor-pointer space-x-2\"\u003e",
        "\t\t\t\t\t\t\u003cspan class=\"label-text\"\u003e",
        "\t\t\t\t\t\t\t{ opt }",
        "\t\t\t\t\t\t\u003c/span\u003e",
        "\t\t\t\t\t\t\u003cinput",
        "\t\t\t\t\t\t\thx-post={ fmt.Sprintf(cb.URL, cb.Name, url.PathEscape(opt)) }",
        "\t\t\t\t\t\t\thx-target={ fmt.Sprintf(\"#%s_selections\", cb.Name) }",
        "\t\t\t\t\t\t\thx-swap=\"beforeend\"",
        "\t\t\t\t\t\t\ttype=\"checkbox\"",
        "\t\t\t\t\t\t\tname={ cb.Name }",
        "\t\t\t\t\t\t\tclass={ \"checkbox\" }",
        "\t\t\t\t\t\t/\u003e",
        "\t\t\t\t\t\u003c/label\u003e",
        "\t\t\t\t\u003c/li\u003e",
        "\t\t\t}",
        "\t\t\u003c/ul\u003e",
        "\t\t\u003cscript data-checkbox-name={ cb.Name } type=\"text/javascript\"\u003e",
        "\t\t\tvar name = document.currentScript.getAttribute(\"data-checkbox-name\");",
        "\t\t\t((name) =\u003e {",
        "\t\t\t\tdocument.addEventListener(\"htmx:configRequest\", (evt) =\u003e {",
        "\t\t\t\t\tif (evt.target.getAttribute(\"name\") === name \u0026\u0026 !evt.target.checked) {",
        "\t\t\t\t\t\t// prevent htmx request when checkbox is unchecked",
        "\t\t\t\t\t\tevt.preventDefault()",
        "",
        "\t\t\t\t\t\t// remove from selected elements",
        "\t\t\t\t\t\tlet label = evt.target.closest(\"label\")",
        "\t\t\t\t\t\tif (label !== null \u0026\u0026 label !== undefined) {",
        "\t\t\t\t\t\t\tlet span = label.querySelector(\"span.label-text\")",
        "\t\t\t\t\t\t\tlet value = span.innerText",
        "\t\t\t\t\t\t\tlet input = document.querySelector(`input[value=\"${value}\"]`)",
        "\t\t\t\t\t\t\tif (input.getAttribute(\"name\") === name) {",
        "\t\t\t\t\t\t\t\tinput.closest(\"div\").remove()",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t}",
        "\t\t\t\t\t}",
        "\t\t\t\t})",
        "\t\t\t})(name);",
        "\t\t\u003c/script\u003e",
        "\t\u003c/details\u003e",
        "}",
        "",
        "templ ComboBadge(name, value string) {",
        "\t\u003cdiv class=\"ml-2 badge badge-neutral p-1 text-nowrap select-none\"\u003e",
        "\t\t\u003cinput type=\"hidden\" name={ name } value={ value }/\u003e",
        "\t\t\u003cspan\u003e{ value }\u003c/span\u003e",
        "\t\t\u003cbutton onclick=\"uncheckAndRemoveBadge(event)\" class=\"ml-1 btn btn-xs btn-circle btn-ghost\"\u003e",
        "\t\t\t@crossIcon()",
        "\t\t\u003c/button\u003e",
        "\t\t\u003cscript\u003e",
        "\t\t\tfunction uncheckAndRemoveBadge(evt) {",
        "\t\t\t\tvar div = evt.target.parentElement",
        "\t\t\t\twhile (div.nodeName !== \"DIV\") {",
        "\t\t\t\t\tdiv = div.parentElement",
        "\t\t\t\t}",
        "\t\t\t\tlet input = div.querySelector(\"input[type=hidden]\")",
        "\t\t\t\tlet name = input.getAttribute(\"name\")",
        "\t\t\t\tlet labelText = input.value",
        "",
        "\t\t\t\tlet details = div.closest(\"details\")",
        "\t\t\t\tlet ul = details.querySelector(\"ul\")",
        "\t\t\t\tlet checkboxes = ul.querySelectorAll(`input[name=\"${name}\"]`)",
        "\t\t\t\tcheckboxes.forEach((cb) =\u003e {",
        "\t\t\t\t\tif (cb.checked) {",
        "\t\t\t\t\t\tlet label = cb.parentElement",
        "\t\t\t\t\t\tlabel.querySelectorAll(\"span.label-text\").forEach((el) =\u003e {",
        "\t\t\t\t\t\t\tif (el.innerHTML === labelText) {",
        "\t\t\t\t\t\t\t\tcb.checked = false",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t})",
        "\t\t\t\t\t}",
        "\t\t\t\t})",
        "\t\t\t\tdiv.remove()",
        "\t\t\t}",
        "\t\t\u003c/script\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ crossIcon() {",
        "\t\u003csvg",
        "\t\tclass=\"h-3 w-3\"",
        "\t\tviewBox=\"0 0 25 25\"",
        "\t\tversion=\"1.1\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"",
        "\t\txmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\"",
        "\t\u003e",
        "\t\t\u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\"\u003e",
        "\t\t\t\u003cg class=\"fill-base-content\" id=\"Icon-Set-Filled\" sketch:type=\"MSLayerGroup\" transform=\"translate(-469.000000, -1041.000000)\"\u003e",
        "\t\t\t\t\u003cpath d=\"M487.148,1053.48 L492.813,1047.82 C494.376,1046.26 494.376,1043.72 492.813,1042.16 C491.248,1040.59 488.712,1040.59 487.148,1042.16 L481.484,1047.82 L475.82,1042.16 C474.257,1040.59 471.721,1040.59 470.156,1042.16 C468.593,1043.72 468.593,1046.26 470.156,1047.82 L475.82,1053.48 L470.156,1059.15 C468.593,1060.71 468.593,1063.25 470.156,1064.81 C471.721,1066.38 474.257,1066.38 475.82,1064.81 L481.484,1059.15 L487.148,1064.81 C488.712,1066.38 491.248,1066.38 492.813,1064.81 C494.376,1063.25 494.376,1060.71 492.813,1059.15 L487.148,1053.48\" sketch:type=\"MSShapeGroup\"\u003e\u003c/path\u003e",
        "\t\t\t\u003c/g\u003e",
        "\t\t\u003c/g\u003e",
        "\t\u003c/svg\u003e",
        "}"
      ]
    },
    {
      "name": "file_input",
      "code": [
        "templ FileInput(input model.Input) {",
        "\t\u003cdiv",
        "\t\thx-target={ fmt.Sprintf(\"#%s-error\", input.Name) }",
        "\t\thx-swap=\"outerHTML\"",
        "\t\tclass=\"w-full\"",
        "\t\u003e",
        "\t\t\u003clabel class=\"form-control w-full pb-2\"\u003e",
        "\t\t\tif input.Label != \"\" {",
        "\t\t\t\t\u003cdiv class=\"label pr-2\"\u003e",
        "\t\t\t\t\t\u003cspan class=\"label-text\"\u003e{ input.Label }\u003c/span\u003e",
        "\t\t\t\t\u003c/div\u003e",
        "\t\t\t}",
        "\t\t\t\u003cdiv",
        "\t\t\t\tid={ input.Name + \"-container\" }",
        "\t\t\t\tclass={",
        "\t\t\t\t\t\"relative !px-0 bg-transparent w-full flex items-center flex-grow\",",
        "\t\t\t\t\ttempl.KV(\"!pl-3\", input.Icon != nil),",
        "\t\t\t\t}",
        "\t\t\t\u003e",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\t{ input.Attrs... }",
        "\t\t\t\t\ttype=\"file\"",
        "\t\t\t\t\tname={ input.Name }",
        "\t\t\t\t\tclass={",
        "\t\t\t\t\t\t\"w-full file-input file-input-bordered\",",
        "\t\t\t\t\t\ttempl.KV(\"input-error\", input.Err != \"\"),",
        "\t\t\t\t\t}",
        "\t\t\t\t\tvalue={ input.Value }",
        "\t\t\t\t/\u003e",
        "\t\t\t\t\u003cscript\u003e",
        "\t\t\t\t\tdocument.addEventListener(\"htmx:afterRequest\", (evt) =\u003e {",
        "\t\t\t\t\t\tlet name = evt.detail.elt.getAttribute(\"name\")",
        "\t\t\t\t\t\tlet div = document.getElementById(name + \"-div\")",
        "\t\t\t\t\t\tif (div === null) {",
        "\t\t\t\t\t\t\treturn",
        "\t\t\t\t\t\t}",
        "\t\t\t\t\t\tlet inp = div.querySelector(\"input[name=\" + name + \"]\")",
        "\t\t\t\t\t\tif (200 \u003c= evt.detail.xhr.status \u0026\u0026 evt.detail.xhr.status \u003c 300) {",
        "\t\t\t\t\t\t\tif (inp.classList.contains(\"input-error\")) {",
        "\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t} else {",
        "\t\t\t\t\t\t\tif (!inp.classList.contains(\"input-error\")) {",
        "\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t}",
        "\t\t\t\t\t})",
        "\t\t\t\t\u003c/script\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/label\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "form",
      "code": [
        "templ Form(attrs templ.Attributes) {",
        "\t\u003cform { attrs... }\u003e",
        "\t\t{ children... }",
        "\t\u003c/form\u003e",
        "}"
      ]
    },
    {
      "name": "input",
      "code": [
        "templ Input(input model.Input) {",
        "\t\u003cdiv",
        "\t\tid={ fmt.Sprintf(\"%s-div\", input.Name) }",
        "\t\thx-target={ fmt.Sprintf(\"#%s-error\", input.Name) }",
        "\t\thx-swap=\"innerHTML\"",
        "\t\tclass=\"w-full\"",
        "\t\u003e",
        "\t\t\u003clabel",
        "\t\t\tclass={ \"form-control w-full\", templ.KV(\"pb-1\", input.Label != \"\") }",
        "\t\t\u003e",
        "\t\t\tif input.Label != \"\" {",
        "\t\t\t\t\u003cdiv class=\"py-1 pr-2\"\u003e",
        "\t\t\t\t\t\u003cspan class=\"label-text leading-4\"\u003e{ input.Label }\u003c/span\u003e",
        "\t\t\t\t\u003c/div\u003e",
        "\t\t\t}",
        "\t\t\t\u003cdiv",
        "\t\t\t\tclass={ \"relative input input-bordered !px-0 bg-transparent w-full flex items-center flex-grow\",",
        "\t\t\t\t\ttempl.KV(\"!pl-3\", input.Icon != nil),",
        "\t\t\t\t\ttempl.KV(\"input-error\", input.Err != \"\") }",
        "\t\t\t\u003e",
        "\t\t\t\tif input.Icon != nil {",
        "\t\t\t\t\t\u003cdiv class=\"w-5 h-5\"\u003e",
        "\t\t\t\t\t\t@input.Icon",
        "\t\t\t\t\t\u003c/div\u003e",
        "\t\t\t\t}",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\t{ input.Attrs... }",
        "\t\t\t\t\tname={ input.Name }",
        "\t\t\t\t\tclass={",
        "\t\t\t\t\t\t\"w-full focus:!outline-none !appearance-none px-2\",",
        "\t\t\t\t\t\ttempl.KV(\"input-error\", input.Err != \"\"),",
        "\t\t\t\t\t\ttempl.KV(input.Classes, input.Classes != \"\"),",
        "\t\t\t\t\t}",
        "\t\t\t\t\tvalue={ input.Value }",
        "\t\t\t\t/\u003e",
        "\t\t\t\t\u003cscript\u003e",
        "\t\t\t\t\tdocument.addEventListener(\"htmx:afterRequest\", (evt) =\u003e {",
        "\t\t\t\t\t\tlet name = evt.detail.elt.getAttribute(\"name\")",
        "\t\t\t\t\t\tlet div = document.getElementById(name + \"-div\")",
        "\t\t\t\t\t\tif (div === null) {",
        "\t\t\t\t\t\t\treturn",
        "\t\t\t\t\t\t}",
        "\t\t\t\t\t\tlet inp = div.querySelector(\"input[name=\" + name + \"]\")",
        "\t\t\t\t\t\tif (200 \u003c= evt.detail.xhr.status \u0026\u0026 evt.detail.xhr.status \u003c 300) {",
        "\t\t\t\t\t\t\tif (inp.classList.contains(\"input-error\")) {",
        "\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t} else {",
        "\t\t\t\t\t\t\tif (!inp.classList.contains(\"input-error\")) {",
        "\t\t\t\t\t\t\t\tinp.classList.toggle(\"input-error\")",
        "\t\t\t\t\t\t\t}",
        "\t\t\t\t\t\t}",
        "\t\t\t\t\t})",
        "\t\t\t\t\u003c/script\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t\t\u003cspan id={ fmt.Sprintf(\"%s-error\", input.Name) } class=\"text-error h-3 text-xs\"\u003e{ input.Err }\u003c/span\u003e",
        "\t\t\u003c/label\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "radio_group",
      "code": [
        "templ RadioGroup(name, classes string, labelsToValues map[string]string) {",
        "\tfor l, v := range labelsToValues {",
        "\t\t\u003cdiv class=\"form-control\"\u003e",
        "\t\t\t\u003clabel class=\"label cursor-pointer\"\u003e",
        "\t\t\t\t\u003cspan class=\"label-text\"\u003e{ l }\u003c/span\u003e",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\ttype=\"radio\"",
        "\t\t\t\t\tname={ name }",
        "\t\t\t\t\tvalue={ v }",
        "\t\t\t\t\tclass={ \"radio\", classes }",
        "\t\t\t\t/\u003e",
        "\t\t\t\u003c/label\u003e",
        "\t\t\u003c/div\u003e",
        "\t}",
        "}"
      ]
    },
    {
      "name": "range",
      "code": [
        "templ Range(r model.Range) {",
        "\t\u003cscript src=\"/js/alpine.js\" defer\u003e\u003c/script\u003e",
        "\t\u003cdiv class=\"form-control\"\u003e",
        "\t\t\u003clabel",
        "\t\t\tclass=\"label space-x-1\"",
        "\t\t\tx-data={ fmt.Sprintf(\"{ value: %d }\", r.Value) }",
        "\t\t\u003e",
        "\t\t\tif r.Label != \"\" {",
        "\t\t\t\t\u003cspan\u003e{ r.Label }\u003c/span\u003e",
        "\t\t\t}",
        "\t\t\t\u003cinput",
        "\t\t\t\ttype=\"range\"",
        "\t\t\t\tname={ r.Name }",
        "\t\t\t\tmin={ fmt.Sprintf(\"%d\", r.Min) }",
        "\t\t\t\tmax={ fmt.Sprintf(\"%d\", r.Max) }",
        "\t\t\t\tx-model=\"value\"",
        "\t\t\t\tclass={ \"range\", r.Class }",
        "\t\t\t\tstep={ fmt.Sprintf(\"%d\", r.Step) }",
        "\t\t\t/\u003e",
        "\t\t\t\u003cdiv x-text=\"value\" class=\"w-full max-w-7\"\u003e\u003c/div\u003e",
        "\t\t\u003c/label\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "rating",
      "code": [
        "templ Rating(r model.Rating) {",
        "\t\u003cdiv class=\"rating\"\u003e",
        "\t\tfor i := r.Min; i \u003c= r.Max; i++ {",
        "\t\t\tif i == 0 {",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\ttype=\"radio\"",
        "\t\t\t\t\tname={ r.Name }",
        "\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }",
        "\t\t\t\t\tclass=\"rating-hidden\"",
        "\t\t\t\t/\u003e",
        "\t\t\t} else {",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\ttype=\"radio\"",
        "\t\t\t\t\tname={ r.Name }",
        "\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }",
        "\t\t\t\t\tclass={ \"mask mask-star-2 bg-yellow-400\", r.Class }",
        "\t\t\t\t\tif i+1 == r.Max {",
        "\t\t\t\t\t\tchecked=\"checked\"",
        "\t\t\t\t\t}",
        "\t\t\t\t/\u003e",
        "\t\t\t}",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ RatingDisplay(r model.Rating) {",
        "\t\u003cdiv class=\"rating\"\u003e",
        "\t\tfor i := r.Min; i \u003c= r.Max; i++ {",
        "\t\t\tif i == 0 {",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\ttype=\"radio\"",
        "\t\t\t\t\tname={ r.Name }",
        "\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }",
        "\t\t\t\t\tclass=\"rating-hidden cursor-default\"",
        "\t\t\t\t\tdisabled",
        "\t\t\t\t/\u003e",
        "\t\t\t} else {",
        "\t\t\t\t\u003cinput",
        "\t\t\t\t\ttype=\"radio\"",
        "\t\t\t\t\tname={ r.Name }",
        "\t\t\t\t\tvalue={ fmt.Sprintf(\"%d\", i) }",
        "\t\t\t\t\tclass={ \"mask mask-star-2 bg-accent cursor-default\", r.Class }",
        "\t\t\t\t\tif i == r.Value {",
        "\t\t\t\t\t\tchecked=\"checked\"",
        "\t\t\t\t\t}",
        "\t\t\t\t\tdisabled",
        "\t\t\t\t/\u003e",
        "\t\t\t}",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "select",
      "code": [
        "templ Select(s model.Select) {",
        "\t\u003clabel",
        "\t\tclass={ \"form-control\", templ.KV(\"pb-2\", s.Label != \"\") }",
        "\t\u003e",
        "\t\tif s.Label != \"\" {",
        "\t\t\t\u003cdiv class=\"label pr-2\"\u003e",
        "\t\t\t\t\u003cspan class=\"label-text\"\u003e{ s.Label }\u003c/span\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t}",
        "\t\t\u003cselect",
        "\t\t\tname={ s.Name }",
        "\t\t\tclass=\"select select-bordered\"",
        "\t\t\t{ s.Attrs... }",
        "\t\t\u003e",
        "\t\t\t@SelectOptions(s.Options)",
        "\t\t\u003c/select\u003e",
        "\t\u003c/label\u003e",
        "}",
        "",
        "templ SelectOptions(options []model.SelectOption) {",
        "\tfor i := range options {",
        "\t\t\u003coption",
        "\t\t\tif options[i].Selected {",
        "\t\t\t\tselected",
        "\t\t\t}",
        "\t\t\tif options[i].Disabled {",
        "\t\t\t\tdisabled",
        "\t\t\t}",
        "\t\t\tvalue={ options[i].Value }",
        "\t\t\u003e",
        "\t\t\t{ options[i].Label }",
        "\t\t\u003c/option\u003e",
        "\t}",
        "}"
      ]
    },
    {
      "name": "textarea",
      "code": [
        "templ Textarea(textarea model.Textarea) {",
        "\t\u003clabel class=\"form-control\"\u003e",
        "\t\t\u003cdiv class=\"label\"\u003e",
        "\t\t\t\u003cspan class=\"label-text\"\u003e{ textarea.Label }\u003c/span\u003e",
        "\t\t\u003c/div\u003e",
        "\t\t\u003ctextarea",
        "\t\t\t{ textarea.Attrs... }",
        "\t\t\tname={ textarea.Name }",
        "\t\t\tclass={",
        "\t\t\t\t\"textarea textarea-bordered resize-none\",",
        "\t\t\t\ttempl.KV(\"textarea-error\", textarea.Err != \"\"),",
        "\t\t\t\ttextarea.Class,",
        "\t\t\t}",
        "\t\t\tif textarea.Rows \u003e 0 {",
        "\t\t\t\trows={ fmt.Sprintf(\"%d\", textarea.Rows) }",
        "\t\t\t} else {",
        "\t\t\t\trows=\"3\"",
        "\t\t\t}",
        "\t\t\u003e",
        "\t\t\t{ textarea.Value }",
        "\t\t\u003c/textarea\u003e",
        "\t\t\u003cdiv class=\"label h-6 !p-0\"\u003e",
        "\t\t\t\u003cspan class=\"label-text-alt text-error\"\u003e{ textarea.Err }\u003c/span\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/label\u003e",
        "}"
      ]
    },
    {
      "name": "toggle",
      "code": [
        "templ Toggle(toggle model.Toggle) {",
        "\t\u003cdiv class=\"form-control\"\u003e",
        "\t\t\u003clabel class=\"label cursor-pointer space-x-2\"\u003e",
        "\t\t\t\u003cspan",
        "\t\t\t\tclass={",
        "\t\t\t\t\t\"label-text\",",
        "\t\t\t\t\ttempl.KV(\"text-primary\", toggle.Highlight \u0026\u0026 !toggle.Checked),",
        "\t\t\t\t}",
        "\t\t\t\u003e{ toggle.Before }\u003c/span\u003e",
        "\t\t\t\u003cinput",
        "\t\t\t\t{ toggle.Attrs... }",
        "\t\t\t\ttype=\"checkbox\"",
        "\t\t\t\tname={ toggle.Name }",
        "\t\t\t\tclass={ \"toggle\", toggle.Class }",
        "\t\t\t\tif toggle.Checked {",
        "\t\t\t\t\tchecked=\"checked\"",
        "\t\t\t\t}",
        "\t\t\t\tif toggle.Highlight {",
        "\t\t\t\t\tonclick=\"toggler(event)\"",
        "\t\t\t\t}",
        "\t\t\t/\u003e",
        "\t\t\t\u003cspan",
        "\t\t\t\tclass={",
        "\t\t\t\t\t\"label-text\",",
        "\t\t\t\t\ttempl.KV(\"text-primary\", toggle.Highlight \u0026\u0026 toggle.Checked),",
        "\t\t\t\t}",
        "\t\t\t\u003e{ toggle.After }\u003c/span\u003e",
        "\t\t\u003c/label\u003e",
        "\t\tif toggle.Highlight {",
        "\t\t\t\u003cscript\u003e",
        "\t\t\tfunction toggler(evt) {",
        "\t\t\t\tevt.target.previousElementSibling.classList.toggle(\"text-primary\")",
        "\t\t\t\tevt.target.nextElementSibling.classList.toggle(\"text-primary\")",
        "\t\t\t}",
        "\t\t\u003c/script\u003e",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    }
  ],
  "feedback": [
    {
      "name": "alert",
      "code": [
        "templ Alert(class string) {",
        "\t\u003cdiv role=\"alert\" class={ \"alert\", class }\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ AlertInfo(message string) {",
        "\t@Alert(\"alert-info\") {",
        "\t\t\u003csvg",
        "\t\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\t\tfill=\"none\"",
        "\t\t\tviewBox=\"0 0 24 24\"",
        "\t\t\tclass=\"stroke-info-content h-6 w-6 shrink-0\"",
        "\t\t\u003e",
        "\t\t\t\u003cpath",
        "\t\t\t\tstroke-linecap=\"round\"",
        "\t\t\t\tstroke-linejoin=\"round\"",
        "\t\t\t\tstroke-width=\"2\"",
        "\t\t\t\td=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
        "\t\t\t\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cspan\u003e{ message }\u003c/span\u003e",
        "\t\t{ children... }",
        "\t}",
        "}",
        "",
        "templ AlertSuccess(message string) {",
        "\t@Alert(\"alert-success\") {",
        "\t\t\u003csvg",
        "\t\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\t\tfill=\"none\"",
        "\t\t\tviewBox=\"0 0 24 24\"",
        "\t\t\tclass=\"stroke-success-content h-6 w-6 shrink-0\"",
        "\t\t\u003e",
        "\t\t\t\u003cpath",
        "\t\t\t\tstroke-linecap=\"round\"",
        "\t\t\t\tstroke-linejoin=\"round\"",
        "\t\t\t\tstroke-width=\"2\"",
        "\t\t\t\td=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"",
        "\t\t\t\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cspan\u003e{ message }\u003c/span\u003e",
        "\t\t{ children... }",
        "\t}",
        "}",
        "",
        "templ AlertWarning(message string) {",
        "\t@Alert(\"alert-warning\") {",
        "\t\t\u003csvg",
        "\t\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\t\tfill=\"none\"",
        "\t\t\tviewBox=\"0 0 24 24\"",
        "\t\t\tclass=\"stroke-warning-content h-6 w-6 shrink-0\"",
        "\t\t\u003e",
        "\t\t\t\u003cpath",
        "\t\t\t\tstroke-linecap=\"round\"",
        "\t\t\t\tstroke-linejoin=\"round\"",
        "\t\t\t\tstroke-width=\"2\"",
        "\t\t\t\td=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"",
        "\t\t\t\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cspan\u003e{ message }\u003c/span\u003e",
        "\t\t{ children... }",
        "\t}",
        "}",
        "",
        "templ AlertError(message string) {",
        "\t@Alert(\"alert-error\") {",
        "\t\t\u003csvg",
        "\t\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\t\tfill=\"none\"",
        "\t\t\tviewBox=\"0 0 24 24\"",
        "\t\t\tclass=\"stroke-error-content h-6 w-6 shrink-0\"",
        "\t\t\u003e",
        "\t\t\t\u003cpath",
        "\t\t\t\tstroke-linecap=\"round\"",
        "\t\t\t\tstroke-linejoin=\"round\"",
        "\t\t\t\tstroke-width=\"2\"",
        "\t\t\t\td=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"",
        "\t\t\t\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cspan\u003e{ message }\u003c/span\u003e",
        "\t\t{ children... }",
        "\t}",
        "}"
      ]
    },
    {
      "name": "skeleton",
      "code": [
        "templ Skeleton() {",
        "\t\u003cdiv class=\"flex flex-col gap-4\"\u003e",
        "\t\t\u003cdiv class=\"skeleton h-32 w-full\"\u003e\u003c/div\u003e",
        "\t\t\u003cdiv class=\"skeleton h-4 w-28\"\u003e\u003c/div\u003e",
        "\t\t\u003cdiv class=\"skeleton h-4 w-full\"\u003e\u003c/div\u003e",
        "\t\t\u003cdiv class=\"skeleton h-4 w-full\"\u003e\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "status",
      "code": [
        "templ Status(status model.Status) {",
        "\t\u003csection class=\"grid h-screen place-content-center px-4\"\u003e",
        "\t\t\u003cdiv class=\"text-center\"\u003e",
        "\t\t\t\u003ch1 class=\"text-9xl font-black text-neutral\"\u003e{ fmt.Sprintf(\"%d\", status.Code) }\u003c/h1\u003e",
        "\t\t\t\u003cp class=\"text-2xl font-bold tracking-tight text-base-content sm:text-4xl\"\u003e{ status.Title }\u003c/p\u003e",
        "\t\t\t\u003cp class=\"mt-4 text-neutral\"\u003e{ status.Description }\u003c/p\u003e",
        "\t\t\t\u003ca",
        "\t\t\t\t{ status.ReturnButton.Attrs... }",
        "\t\t\t\tclass=\"mt-4 btn btn-primary\"",
        "\t\t\t\u003e",
        "\t\t\t\t{ status.ReturnButton.Label }",
        "\t\t\t\u003c/a\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/section\u003e",
        "}"
      ]
    },
    {
      "name": "toast",
      "code": [
        "templ Toast(toast model.Toast) {",
        "\t\u003cdiv name={ toast.Name } class={ \"toast\", toast.ToastClasses }\u003e",
        "\t\t\u003cdiv class={ \"alert\", toast.AlertClasses }\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ ToastErrorConfirm(errs ...string) {",
        "\t@Toast(",
        "\t\tmodel.Toast{",
        "\t\t\tName:         \"toast-error\",",
        "\t\t\tToastClasses: \"toast-top toast-center\",",
        "\t\t\tAlertClasses: \"alert-error\",",
        "\t\t},",
        "\t) {",
        "\t\t\u003csvg",
        "\t\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\t\tclass=\"h-6 w-6 shrink-0 stroke-current\"",
        "\t\t\tfill=\"none\"",
        "\t\t\tviewBox=\"0 0 24 24\"",
        "\t\t\u003e",
        "\t\t\t\u003cpath stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cdiv class=\"w-full max-w-xs text-sm text-start\"\u003e",
        "\t\t\t\u003cul class=\"list-disc pl-2\"\u003e",
        "\t\t\t\tfor _, e := range errs {",
        "\t\t\t\t\t\u003cli\u003e{ e }\u003c/li\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/ul\u003e",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cbutton onclick=\"remover(event)\" class=\"btn btn-error\"\u003eOK\u003c/button\u003e",
        "\t\t\u003cscript\u003e",
        "            function remover(evt) {",
        "                evt.target.closest(\"div[name=toast-error]\").remove()",
        "            }",
        "        \u003c/script\u003e",
        "\t}",
        "}",
        "",
        "templ HXToastInfoFade(messages ...string) {",
        "\t@Toast(",
        "\t\tmodel.Toast{",
        "\t\t\tName:         \"toast-info\",",
        "\t\t\tToastClasses: \"toast-bottom toast-end w-full max-w-xs\",",
        "\t\t\tAlertClasses: \"alert-info w-full max-w-xs space-x-4\",",
        "\t\t},",
        "\t) {",
        "\t\t\u003csvg class=\"h-6 w-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e",
        "\t\t\t\u003cpath class=\"stroke-info-content\" d=\"M12 17V11\" stroke-width=\"1.5\" stroke-linecap=\"round\"\u003e\u003c/path\u003e",
        "\t\t\t\u003ccircle class=\"fill-info-content\" cx=\"1\" cy=\"1\" r=\"1\" transform=\"matrix(1 0 0 -1 11 9)\"\u003e\u003c/circle\u003e",
        "\t\t\t\u003cpath class=\"stroke-info-content\" d=\"M22 12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2C16.714 2 19.0711 2 20.5355 3.46447C21.5093 4.43821 21.8356 5.80655 21.9449 8\" stroke-width=\"1.5\" stroke-linecap=\"round\"\u003e\u003c/path\u003e",
        "\t\t\u003c/svg\u003e",
        "\t\t\u003cdiv class=\"w-full max-w-xs text-sm text-start\"\u003e",
        "\t\t\t\u003cul",
        "\t\t\t\tclass={ templ.KV(\"list-disc\", len(messages) \u003e 1) }",
        "\t\t\t\u003e",
        "\t\t\t\tfor _, m := range messages {",
        "\t\t\t\t\t\u003cli\u003e{ m }\u003c/li\u003e",
        "\t\t\t\t}",
        "\t\t\t\u003c/ul\u003e",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cscript\u003e",
        "\t\t\tdocument.addEventListener(\"htmx:afterSettle\", (evt) =\u003e {",
        "\t\t\t\tlet els = document.querySelectorAll(\"div[name=toast-info]\")",
        "\t\t\t\tlet el = els[els.length-1]",
        "",
        "\t\t\t\tif (el !== undefined) {",
        "\t\t\t\t\tsetTimeout(() =\u003e {",
        "\t\t\t\t\t\tel.remove()",
        "\t\t\t\t\t}, 5000)",
        "\t\t\t\t}",
        "\t\t\t})",
        "        \u003c/script\u003e",
        "\t}",
        "}"
      ]
    },
    {
      "name": "tooltip",
      "code": [
        "templ Tooltip(tip string) {",
        "\t\u003cdiv class=\"tooltip\" data-tip={ tip }\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ TooltipError(tip string) {",
        "\t\u003cdiv class=\"tooltip tooltip-top tooltip-error\" data-tip={ tip }\u003e",
        "\t\t{ children... }",
        "\t\u003c/div\u003e",
        "}"
      ]
    }
  ],
  "layout": [
    {
      "name": "banner",
      "code": [
        "templ Banner(banner model.Banner) {",
        "\t\u003csection\u003e",
        "\t\t\u003cdiv class=\"mx-auto max-w-screen-xl px-4 py-32 lg:flex lg:items-center\"\u003e",
        "\t\t\t\u003cdiv class=\"mx-auto max-w-xl text-center\"\u003e",
        "\t\t\t\t@banner.Title",
        "\t\t\t\t\u003cp class=\"mt-4 sm:text-xl/relaxed\"\u003e",
        "\t\t\t\t\t{ banner.Description }",
        "\t\t\t\t\u003c/p\u003e",
        "\t\t\t\t\u003cdiv class=\"mt-8 flex flex-wrap justify-center gap-4\"\u003e",
        "\t\t\t\t\t\u003ca",
        "\t\t\t\t\t\tclass=\"btn btn-primary\"",
        "\t\t\t\t\t\t{ banner.CallToAction.Attrs... }",
        "\t\t\t\t\t\u003e",
        "\t\t\t\t\t\t{ banner.CallToAction.Label }",
        "\t\t\t\t\t\u003c/a\u003e",
        "\t\t\t\t\t\u003ca",
        "\t\t\t\t\t\tclass=\"btn btn-neutral\"",
        "\t\t\t\t\t\t{ banner.SecondaryCallToAction.Attrs... }",
        "\t\t\t\t\t\u003e",
        "\t\t\t\t\t\t{ banner.SecondaryCallToAction.Label }",
        "\t\t\t\t\t\u003c/a\u003e",
        "\t\t\t\t\u003c/div\u003e",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/section\u003e",
        "}"
      ]
    },
    {
      "name": "drawer",
      "code": [
        "templ Drawer(toggle templ.Component, sidebar templ.Component) {",
        "\t\u003cdiv class=\"drawer\"\u003e",
        "\t\t\u003cinput id=\"my-drawer\" type=\"checkbox\" class=\"drawer-toggle\"/\u003e",
        "\t\t\u003cdiv class=\"drawer-content\"\u003e",
        "\t\t\t\u003clabel for=\"my-drawer\" class=\"btn btn-primary drawer-button\"\u003e",
        "\t\t\t\t@toggle",
        "\t\t\t\u003c/label\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/div\u003e",
        "\t\t\u003cdiv class=\"drawer-side\"\u003e",
        "\t\t\t\u003clabel for=\"my-drawer\" aria-label=\"close sidebar\" class=\"drawer-overlay\"\u003e\u003c/label\u003e",
        "\t\t\t\u003cul class=\"menu bg-base-200 text-base-content min-h-full w-80 p-4\"\u003e",
        "\t\t\t\t@sidebar",
        "\t\t\t\u003c/ul\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "footer",
      "code": [
        "templ Footer(companyInfo model.CompanyInfo, socialLinks []model.Anchor) {",
        "\t\u003cfooter class=\"footer bg-base-200 text-base-content p-10 mt-24\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/footer\u003e",
        "\t\u003cfooter class=\"footer bg-base-200 text-base-content border-base-300 border-t px-10 py-4\"\u003e",
        "\t\t\u003caside class=\"grid-flow-col items-center\"\u003e",
        "\t\t\tif companyInfo.Icon != nil {",
        "\t\t\t\t\u003cdiv class=\"w-6 h-6\"\u003e",
        "\t\t\t\t\t@companyInfo.Icon",
        "\t\t\t\t\u003c/div\u003e",
        "\t\t\t}",
        "\t\t\t\u003cp\u003e",
        "\t\t\t\tif companyInfo.Copyright != \"\" {",
        "\t\t\t\t\t\u003cspan\u003e\u0026copy; { companyInfo.Copyright }\u003c/span\u003e",
        "\t\t\t\t}",
        "\t\t\t\t{ companyInfo.Name }",
        "\t\t\t\t\u003cbr/\u003e",
        "\t\t\t\t{ companyInfo.Description }",
        "\t\t\t\u003c/p\u003e",
        "\t\t\u003c/aside\u003e",
        "\t\t\u003cnav class=\"md:place-self-center md:justify-self-end\"\u003e",
        "\t\t\t\u003cdiv class=\"grid grid-flow-col gap-4\"\u003e",
        "\t\t\t\tfor _, socialLink := range socialLinks {",
        "\t\t\t\t\t@SocialsLink(socialLink)",
        "\t\t\t\t}",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/nav\u003e",
        "\t\u003c/footer\u003e",
        "}",
        "",
        "templ FooterNav(title string, links []model.Anchor) {",
        "\t\u003cnav\u003e",
        "\t\t\u003ch6 class=\"footer-title\"\u003e{ title }\u003c/h6\u003e",
        "\t\tfor _, link := range links {",
        "\t\t\t\u003ca { link.Attrs... } class=\"link link-hover\"\u003e{ link.Label }\u003c/a\u003e",
        "\t\t}",
        "\t\u003c/nav\u003e",
        "}"
      ]
    },
    {
      "name": "hero",
      "code": [
        "templ Hero(image string, reverse bool) {",
        "\t\u003cdiv class=\"hero bg-base-200 min-h-screen\"\u003e",
        "\t\t\u003cdiv",
        "\t\t\tclass={",
        "\t\t\t\t\"hero-content\",",
        "\t\t\t\t\"flex-col\",",
        "\t\t\t\ttempl.KV(\"xl:flex-row\", !reverse),",
        "\t\t\t\ttempl.KV(\"xl:flex-row-reverse\", reverse),",
        "\t\t\t}",
        "\t\t\u003e",
        "\t\t\tif image != \"\" {",
        "\t\t\t\t\u003cimg src={ image } class=\"max-w-sm rounded-lg shadow-2xl\"/\u003e",
        "\t\t\t}",
        "\t\t\t\u003cdiv\u003e",
        "\t\t\t\t{ children... }",
        "\t\t\t\u003c/div\u003e",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    }
  ],
  "navigation": [
    {
      "name": "breadcrumbs",
      "code": [
        "templ Breadcrumbs(links []model.Button) {",
        "\t\u003cdiv class=\"breadcrumbs text-sm\"\u003e",
        "\t\t\u003cul\u003e",
        "\t\t\tfor i, l := range links {",
        "\t\t\t\t\u003cli class=\"select-none\"\u003e",
        "\t\t\t\t\tif i \u003c len(links) - 1 {",
        "\t\t\t\t\t\t\u003ca { l.Attrs... }\u003e{ l.Label }\u003c/a\u003e",
        "\t\t\t\t\t} else {",
        "\t\t\t\t\t\t{ l.Label }",
        "\t\t\t\t\t}",
        "\t\t\t\t\u003c/li\u003e",
        "\t\t\t}",
        "\t\t\u003c/ul\u003e",
        "\t\u003c/div\u003e",
        "}"
      ]
    },
    {
      "name": "menu",
      "code": [
        "templ Menu() {",
        "\t\u003cul class=\"menu rounded-box bg-base-300\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/ul\u003e",
        "}",
        "",
        "templ MenuItem(label string, attrs templ.Attributes) {",
        "\t\u003cli\u003e",
        "\t\t\u003ca { attrs... }\u003e{ label }\u003c/a\u003e",
        "\t\t\u003cul\u003e",
        "\t\t\t{ children... }",
        "\t\t\u003c/ul\u003e",
        "\t\u003c/li\u003e",
        "}"
      ]
    },
    {
      "name": "pagination",
      "code": [
        "templ Pagination(id string, p model.PaginationItem) {",
        "\t\u003cdiv id={ id }\u003e",
        "\t\t\u003c!-- paginated content goes here --\u003e",
        "\t\t{ children... }",
        "\t\t\u003c!-- --\u003e",
        "\t\t\u003cdiv class=\"join\"\u003e",
        "\t\t\t@PaginationButton(id, p.URL, 1, p.Page == 1) {",
        "\t\t\t\t@AnglesLeft()",
        "\t\t\t}",
        "\t\t\t@PaginationButton(id, p.URL, p.Page-1, p.Page == 1) {",
        "\t\t\t\t@ChevronLeft()",
        "\t\t\t}",
        "\t\t\tfor i := p.Low; i \u003c= p.High; i++ {",
        "\t\t\t\t@PaginationButton(id, p.URL, i+1, p.Page == i+1) {",
        "\t\t\t\t\t{ fmt.Sprintf(\"%d\", i+1) }",
        "\t\t\t\t}",
        "\t\t\t}",
        "\t\t\t@PaginationButton(id, p.URL, p.Page+1, p.Page == p.MaxPages) {",
        "\t\t\t\t@ChevronRight()",
        "\t\t\t}",
        "\t\t\t@PaginationButton(id, p.URL, p.MaxPages, p.Page == p.MaxPages) {",
        "\t\t\t\t@AnglesRight()",
        "\t\t\t}",
        "\t\t\u003c/div\u003e",
        "\t\u003c/div\u003e",
        "}",
        "",
        "templ PaginationButton(id, url string, urlPage int, disabled bool) {",
        "\t\u003cbutton",
        "\t\tif url != \"\" {",
        "\t\t\thx-get={ fmt.Sprintf(\"%s?page=%d\", url, urlPage) }",
        "\t\t\thx-target={ fmt.Sprintf(\"#%s\", id) }",
        "\t\t\thx-swap=\"outerHTML\"",
        "\t\t}",
        "\t\tclass={",
        "\t\t\t\"join-item btn btn-square disabled:opacity-40\",",
        "\t\t\ttempl.KV(\"btn-disabled\", disabled),",
        "\t\t}",
        "\t\tif disabled {",
        "\t\t\tdisabled",
        "\t\t}",
        "\t\u003e",
        "\t\t{ children... }",
        "\t\u003c/button\u003e",
        "}",
        "",
        "templ AnglesRight() {",
        "\t\u003csvg",
        "\t\tclass=\"w-4 h-4\"",
        "\t\tviewBox=\"0 0 24 24\"",
        "\t\tfill=\"none\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\u003e",
        "\t\t\u003cpath",
        "\t\t\td=\"M6 17L11 12L6 7M13 17L18 12L13 7\"",
        "\t\t\tclass=\"stroke-base-content\"",
        "\t\t\tstroke-width=\"2\"",
        "\t\t\tstroke-linecap=\"round\"",
        "\t\t\tstroke-linejoin=\"round\"",
        "\t\t\u003e\u003c/path\u003e",
        "\t\u003c/svg\u003e",
        "}",
        "",
        "templ AnglesLeft() {",
        "\t\u003csvg",
        "\t\tclass=\"w-4 h-4\"",
        "\t\tviewBox=\"0 0 24 24\"",
        "\t\tfill=\"none\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\u003e",
        "\t\t\u003cpath",
        "\t\t\td=\"M18 17L13 12L18 7M11 17L6 12L11 7\"",
        "\t\t\tclass=\"stroke-base-content\"",
        "\t\t\tstroke-width=\"2\"",
        "\t\t\tstroke-linecap=\"round\"",
        "\t\t\tstroke-linejoin=\"round\"",
        "\t\t\u003e\u003c/path\u003e",
        "\t\u003c/svg\u003e",
        "}",
        "",
        "templ ChevronRight() {",
        "\t\u003csvg",
        "\t\tclass=\"w-4 h-4\"",
        "\t\tviewBox=\"0 0 24 24\"",
        "\t\tfill=\"none\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\u003e",
        "\t\t\u003cpath",
        "\t\t\td=\"M9 6L15 12L9 18\"",
        "\t\t\tclass=\"stroke-base-content\"",
        "\t\t\tstroke-width=\"2\"",
        "\t\t\tstroke-linecap=\"round\"",
        "\t\t\tstroke-linejoin=\"round\"",
        "\t\t\u003e\u003c/path\u003e",
        "\t\u003c/svg\u003e",
        "}",
        "",
        "templ ChevronLeft() {",
        "\t\u003csvg",
        "\t\tclass=\"w-4 h-4\"",
        "\t\tviewBox=\"0 0 24 24\"",
        "\t\tfill=\"none\"",
        "\t\txmlns=\"http://www.w3.org/2000/svg\"",
        "\t\u003e",
        "\t\t\u003cpath",
        "\t\t\td=\"M15 6L9 12L15 18\"",
        "\t\t\tclass=\"stroke-base-content\"",
        "\t\t\tstroke-width=\"2\"",
        "\t\t\tstroke-linecap=\"round\"",
        "\t\t\tstroke-linejoin=\"round\"",
        "\t\t\u003e\u003c/path\u003e",
        "\t\u003c/svg\u003e",
        "}"
      ]
    },
    {
      "name": "socials",
      "code": [
        "templ SocialsLink(socialLink model.Anchor) {",
        "\t\u003ca href={ templ.SafeURL(socialLink.Href) }\u003e",
        "\t\t@socialLink.Icon",
        "\t\u003c/a\u003e",
        "}"
      ]
    },
    {
      "name": "steps",
      "code": [
        "templ Steps() {",
        "\t\u003cul class=\"steps\"\u003e",
        "\t\t{ children... }",
        "\t\u003c/ul\u003e",
        "}",
        "",
        "templ Step(label string, done bool, attrs templ.Attributes) {",
        "\t\u003cli",
        "\t\tclass={ \"step\", templ.KV(\"step-primary\", done) }",
        "\t\u003e",
        "\t\t\u003ca { attrs... }\u003e{ label }\u003c/a\u003e",
        "\t\u003c/li\u003e",
        "}"
      ]
    },
    {
      "name": "tabs",
      "code": [
        "templ Tabs(name string, tabs []model.Tab) {",
        "\t\u003cdiv role=\"tablist\" class=\"tabs tabs-lifted\"\u003e",
        "\t\tfor i, tab := range tabs {",
        "\t\t\t\u003cinput",
        "\t\t\t\ttype=\"radio\"",
        "\t\t\t\tname={ name }",
        "\t\t\t\trole=\"tab\"",
        "\t\t\t\tclass={ \"tab\" }",
        "\t\t\t\taria-label={ tab.Label }",
        "\t\t\t\tif i == 0 {",
        "\t\t\t\t\tchecked=\"checked\"",
        "\t\t\t\t}",
        "\t\t\t/\u003e",
        "\t\t\t\u003cdiv role=\"tabpanel\" class=\"tab-content bg-base-100 border-base-300 rounded-box p-6 overflow-x-auto\"\u003e",
        "\t\t\t\t@tab.Content",
        "\t\t\t\u003c/div\u003e",
        "\t\t}",
        "\t\u003c/div\u003e",
        "}"
      ]
    }
  ]
}