// Video Interface Registers
#pragma once

enum {
	VI_PHYSADDR = 0x0C002000,
	VI_VIRTADDR = 0x8C002000,
	VI_LENGTH = 0x1000,
	VI_INTERRUPT_COUNT = 4,
	
	VI_INTERRUPT_FLAG_ENABLE = BIT(12),
	VI_INTERRUPT_FLAG_STATUS = BIT(15),

	VECTOR_VI = 8
};

typedef struct _VI_INTERRUPT_REGISTERS {
	USHORT VerticalAndFlags;
	USHORT HorizontalCount;
} VI_INTERRUPT_REGISTERS, *PVI_INTERRUPT_REGISTERS;

typedef struct _VI_REGISTERS {
	USHORT Unused[24];
	VI_INTERRUPT_REGISTERS Interrupts[VI_INTERRUPT_COUNT];
} VI_REGISTERS, *PVI_REGISTERS;

#define VI_REGISTER_BAT ((PVI_REGISTERS)VI_VIRTADDR)

#define VI_INTERRUPT_FLAGS_READ(i) MmioReadBase16( MMIO_OFFSET(VI_REGISTER_BAT, Interrupts[(i)].VerticalAndFlags) )
#define VI_INTERRUPT_FLAGS_WRITE(i, x) MmioWriteBase16( MMIO_OFFSET(VI_REGISTER_BAT, Interrupts[(i)].VerticalAndFlags), (x) )
#define VI_INTERRUPT_ENABLE(i) VI_INTERRUPT_FLAGS_WRITE( i, VI_INTERRUPT_FLAGS_READ(i) | VI_INTERRUPT_FLAG_ENABLE )
#define VI_INTERRUPT_DISABLE(i) VI_INTERRUPT_FLAGS_WRITE( i, VI_INTERRUPT_FLAGS_READ(i) & ~VI_INTERRUPT_FLAG_ENABLE )
#define VI_INTERRUPT_STATUS(i) ( ( VI_INTERRUPT_FLAGS_READ(i) & VI_INTERRUPT_FLAG_STATUS ) != 0 )
#define VI_INTERRUPT_CLEAR(i) VI_INTERRUPT_FLAGS_WRITE( i, VI_INTERRUPT_FLAGS_READ(i) & ~VI_INTERRUPT_FLAG_STATUS )