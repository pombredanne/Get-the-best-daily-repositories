#pragma once

#include "runtime.h"

typedef enum {
	SDIOHCR_RESPONSE = 0x10,
	SDIOHCR_HOSTCONTROL = 0x28,
	SDIOHCR_POWERCONTROL = 0x29,
	SDIOHCR_CLOCKCONTROL = 0x2C,
	SDIOHCR_TIMEOUTCONTROL = 0x2E,
	SDIOHCR_SOFTWARERESET = 0x2F,
	
	SDIOHCR_HOSTCONTROL_4BIT = 0x02
} SDIO_CONTROLLER_REGISTER;

typedef enum {
	SDIO_CMD_GOIDLE = 0,
	SDIO_CMD_ALL_SENDCID = 2,
	SDIO_CMD_SENDRCA = 3,
	SDIO_CMD_SELECT = 7,
	SDIO_CMD_DESELECT = 7,
	SDIO_CMD_SENDIFCOND = 8,
	SDIO_CMD_SENDCSD = 9,
	SDIO_CMD_SENDCID = 10,
	SDIO_CMD_SENDSTATUS = 13,
	SDIO_CMD_SETBLOCKLEN = 16,
	SDIO_CMD_READBLOCK = 17,
	SDIO_CMD_READMULTIBLOCK = 18,
	SDIO_CMD_WRITEBLOCK = 24,
	SDIO_CMD_WRITEMULTIBLOCK = 25,
	SDIO_CMD_APPCMD = 0x37,
	
	SDIO_ACMD_SETBUSWIDTH = 0x06,
	SDIO_ACMD_SENDSCR = 0x33,
	SDIO_ACMD_SENDOPCOND = 0x29
} SDIO_COMMAND;

typedef enum {
	SDIO_TYPE_NONE,
	SDIO_TYPE_READ,
	SDIO_TYPE_WRITE,
	SDIO_TYPE_CMD
} SDIO_COMMAND_TYPE;

typedef enum {
	SDIO_RESPONSE_NONE,
	SDIO_RESPONSE_R1,
	SDIO_RESPONSE_R1B,
	SDIO_RESPONSE_R2,
	SDIO_RESPONSE_R3,
	SDIO_RESPONSE_R4,
	SDIO_RESPONSE_R5,
	SDIO_RESPONSE_R6,
} SDIO_RESPONSE;

typedef enum {
	SDIO_STATUS_CARD_INSERTED = BIT(0),
	SDIO_STATUS_CARD_REMOVED = BIT(1),
	SDIO_STATUS_CARD_WRITEPROT = BIT(2),
	SDIO_STATUS_SUSPEND = BIT(3),
	SDIO_STATUS_BUSY = BIT(4),
	
	SDIO_TYPE_UNKNOWN = 0,
	SDIO_TYPE_MEMORY = (BIT(0) << 16),
	SDIO_TYPE_SDIO = (BIT(1) << 16),
	SDIO_TYPE_COMBO = (BIT(2) << 16),
	SDIO_TYPE_MMC = (BIT(3) << 16),
	SDIO_TYPE_SDHC = (BIT(4) << 16),
} SDIO_STATUS;

enum {
	SDIO_DEFAULT_TIMEOUT = 0xe
};

enum {
	SDMC_SECTOR_SIZE = 0x200,
	SDMC_SECTORS_IN_PAGE = PAGE_SIZE / SDMC_SECTOR_SIZE
};

enum {
	SDMC_BUFFER_PHYS_START = 0x10000000,
	SDMC_BUFFER_LENGTH = 0x80000,
	SDMC_BUFFER_PHYS_END = SDMC_BUFFER_PHYS_START + SDMC_BUFFER_LENGTH
};

typedef enum {
	IOCTL_SDIO_WRITEHCREG = 1,
	IOCTL_SDIO_READHCREG,
	IOCTL_SDIO_READCREG,
	IOCTL_SDIO_RESETCARD,
	IOCTL_SDIO_WRITECREF,
	IOCTL_SDIO_SETCLK,
	IOCTL_SDIO_SENDCMD,
	IOCTL_SDIO_SETBUSWIDTH,
	IOCTL_SDIO_READMCREG,
	IOCTL_SDIO_WRITEMCREG,
	IOCTL_SDIO_GETSTATUS,
	IOCTL_SDIO_GETOCR,
	IOCTL_SDIO_READDATA,
	IOCTL_SDIO_WRITEDATA
} IOS_IOCTL_SDMC;

typedef struct _IOS_SDMC_COMMAND {
	ULONG CommandType;
	ULONG Command;

	ULONG Argument;
	ULONG ResponseType;

	ULONG BlockSize;
	ULONG BlockCount;

	ULONG IsDma;
	ULONG UserBuffer;

	ULONG Padding1;
	ULONG Padding0;
} IOS_SDMC_COMMAND, *PIOS_SDMC_COMMAND;

typedef struct _IOS_SDMC_RESPONSE {
	ULONG Field1;
	ULONG Field0;
	LONG ACmd12Response;
	ULONG Field2;
} IOS_SDMC_RESPONSE, *PIOS_SDMC_RESPONSE;

typedef struct _IOS_SDMC_MMIO {
	ULONG BlockSize;
	ULONG Address;
	ULONG Width;
	ULONG BlockCount;
	ULONG IsDma;
	ULONG Value;
} IOS_SDMC_MMIO, *PIOS_SDMC_MMIO;

#define RtlCopyMemory(Destination,Source,Length) memcpy((Destination),(Source),(Length))